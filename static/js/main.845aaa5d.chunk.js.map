{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"qQAEMA,EAAc,WAChB,OACE,+BACE,4BACE,oCACA,sCAOFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BAAI,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKV,OAAO,+BAAQJ,IAgBJU,E,iLAZH,IAAD,EACmCC,KAAKZ,MAAvCE,EADD,EACCA,cAAeQ,EADhB,EACgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAR9CG,a,OCgBLC,E,YAxCb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAURe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAfO,EAmBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAClBhB,KAAM,GACNC,IAAK,IAGP,EAAKc,MAAQ,EAAKC,aARD,E,sEAwBT,IAAD,EACeX,KAAKU,MAAnBf,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,uCACA,2BAAOgB,KAAK,OAAOjB,KAAK,OAAOW,MAAOX,EAAMkB,SAAUb,KAAKG,eAC3D,sCACA,2BAAOS,KAAK,OAAOjB,KAAK,MAAMW,MAAOV,EAAKiB,SAAUb,KAAKG,eACzD,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GAlCvCP,aCkCJa,E,2MA/BXJ,MAAQ,CACJK,WAAY,I,EAIhBjB,gBAAkB,SAAAL,GAAU,IAChBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKrBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAG/C,IACEF,EAAef,KAAKU,MAApBK,WAER,OACI,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO7B,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBACxD,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GA1BrBR,a,MCClBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.845aaa5d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Job</th>\n        </tr>\n      </thead>\n    )\n  }\n\n\n  const TableBody = props => {\n    const rows = props.characterData.map((row, index) => {\n      return (\n        <tr key={index}>\n          <td>{row.name}</td>\n          <td>{row.job}</td>\n          <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\n        </tr>\n      )\n    })\n  \n    return <tbody>{rows}</tbody>\n  }\nclass Table extends Component {\n    \n  render() {\n    const { characterData, removeCharacter} = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />      \n     </table>\n    )\n  }\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: '',\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n  \n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, job } = this.state;\n  \n    return (\n      <form>\n        <label>Name</label>\n        <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n        <label>Job</label>\n        <input type=\"text\" name=\"job\" value={job} onChange={this.handleChange} />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n  \n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: []\n      }\n    \n    // Table   \n    removeCharacter = index => {\n        const { characters } = this.state\n      \n        this.setState({\n          characters: characters.filter((character, i) => {\n            return i !== index\n          })\n        })\n    } \n\n    handleSubmit = character => {\n      this.setState({ characters: [...this.state.characters, character] })\n    }\n\n    render() {\n        const { characters } = this.state\n\n        return (\n            <div className=\"container\">\n              <Table characterData={characters} removeCharacter={this.removeCharacter} />\n              <Form handleSubmit={this.handleSubmit} />\n            </div>\n          )\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}